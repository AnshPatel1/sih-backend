openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/auth/auth/jwt/create/:
    post:
      operationId: api_auth_auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/auth/jwt/refresh/:
    post:
      operationId: api_auth_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/auth/jwt/verify/:
    post:
      operationId: api_auth_auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/auth/logout/:
    post:
      operationId: api_auth_auth_logout_create
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/auth/users/:
    get:
      operationId: api_auth_auth_users_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_auth_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/auth/auth/users/{id}/:
    get:
      operationId: api_auth_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/auth/users/activation/:
    post:
      operationId: api_auth_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/auth/users/me/:
    get:
      operationId: api_auth_auth_users_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_auth_users_me_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/auth/users/resend_activation/:
    post:
      operationId: api_auth_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/auth/users/reset_password/:
    post:
      operationId: api_auth_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/auth/users/reset_password_confirm/:
    post:
      operationId: api_auth_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/auth/users/reset_username/:
    post:
      operationId: api_auth_auth_users_reset_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/auth/users/reset_username_confirm/:
    post:
      operationId: api_auth_auth_users_reset_username_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/auth/users/set_password/:
    post:
      operationId: api_auth_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/auth/auth/users/set_username/:
    post:
      operationId: api_auth_auth_users_set_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/certificates/:
    get:
      operationId: api_certificates_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'
          description: ''
    post:
      operationId: api_certificates_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Certificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Certificate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
  /api/certificates/{id}/:
    get:
      operationId: api_certificates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Certificate.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
    put:
      operationId: api_certificates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Certificate.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Certificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Certificate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
    patch:
      operationId: api_certificates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Certificate.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCertificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCertificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCertificate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
    delete:
      operationId: api_certificates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Certificate.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/:
    get:
      operationId: api_courses_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: api_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: api_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/educations/:
    get:
      operationId: api_educations_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
          description: ''
    post:
      operationId: api_educations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/educations/{id}/:
    get:
      operationId: api_educations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    put:
      operationId: api_educations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    patch:
      operationId: api_educations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    delete:
      operationId: api_educations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/endorsements/:
    get:
      operationId: api_endorsements_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endorsement'
          description: ''
    post:
      operationId: api_endorsements_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endorsement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Endorsement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Endorsement'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endorsement'
          description: ''
  /api/endorsements/{id}/:
    get:
      operationId: api_endorsements_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Endorsement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endorsement'
          description: ''
    put:
      operationId: api_endorsements_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Endorsement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endorsement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Endorsement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Endorsement'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endorsement'
          description: ''
    patch:
      operationId: api_endorsements_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Endorsement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEndorsement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEndorsement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEndorsement'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endorsement'
          description: ''
    delete:
      operationId: api_endorsements_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Endorsement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experience-media/:
    get:
      operationId: api_experience_media_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExperienceMedia'
          description: ''
    post:
      operationId: api_experience_media_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceMedia'
          description: ''
  /api/experience-media/{id}/:
    get:
      operationId: api_experience_media_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceMedia'
          description: ''
    put:
      operationId: api_experience_media_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperienceMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceMedia'
          description: ''
    patch:
      operationId: api_experience_media_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperienceMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperienceMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperienceMedia'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceMedia'
          description: ''
    delete:
      operationId: api_experience_media_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/experiences/:
    get:
      operationId: api_experiences_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experience'
          description: ''
    post:
      operationId: api_experiences_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
  /api/experiences/{id}/:
    get:
      operationId: api_experiences_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    put:
      operationId: api_experiences_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    patch:
      operationId: api_experiences_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    delete:
      operationId: api_experiences_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/featured-courses/:
    get:
      operationId: api_featured_courses_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeaturedCourse'
          description: ''
    post:
      operationId: api_featured_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedCourse'
          description: ''
  /api/featured-courses/{id}/:
    get:
      operationId: api_featured_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Featured Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedCourse'
          description: ''
    put:
      operationId: api_featured_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Featured Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeaturedCourse'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedCourse'
          description: ''
    patch:
      operationId: api_featured_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Featured Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeaturedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeaturedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeaturedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturedCourse'
          description: ''
    delete:
      operationId: api_featured_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Featured Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/job-applications/:
    get:
      operationId: api_job_applications_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
          description: ''
    post:
      operationId: api_job_applications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/job-applications/{id}/:
    get:
      operationId: api_job_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Application.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    put:
      operationId: api_job_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    patch:
      operationId: api_job_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    delete:
      operationId: api_job_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Application.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/job-listings/:
    get:
      operationId: api_job_listings_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobListing'
          description: ''
    post:
      operationId: api_job_listings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobListing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobListing'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListing'
          description: ''
  /api/job-listings/{id}/:
    get:
      operationId: api_job_listings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Listing.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListing'
          description: ''
    put:
      operationId: api_job_listings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Listing.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobListing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobListing'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListing'
          description: ''
    patch:
      operationId: api_job_listings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Listing.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobListing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobListing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobListing'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListing'
          description: ''
    delete:
      operationId: api_job_listings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Listing.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/job-media/:
    get:
      operationId: api_job_media_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobMedia'
          description: ''
    post:
      operationId: api_job_media_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMedia'
          description: ''
  /api/job-media/{id}/:
    get:
      operationId: api_job_media_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMedia'
          description: ''
    put:
      operationId: api_job_media_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMedia'
          description: ''
    patch:
      operationId: api_job_media_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobMedia'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMedia'
          description: ''
    delete:
      operationId: api_job_media_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/job-skills/:
    get:
      operationId: api_job_skills_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSkill'
          description: ''
    post:
      operationId: api_job_skills_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobSkill'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSkill'
          description: ''
  /api/job-skills/{id}/:
    get:
      operationId: api_job_skills_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSkill'
          description: ''
    put:
      operationId: api_job_skills_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobSkill'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSkill'
          description: ''
    patch:
      operationId: api_job_skills_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobSkill'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSkill'
          description: ''
    delete:
      operationId: api_job_skills_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job Skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/:
    get:
      operationId: api_jobs_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
    post:
      operationId: api_jobs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{id}/:
    get:
      operationId: api_jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: api_jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: api_jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: api_jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Job.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/mentor-status-requests/:
    get:
      operationId: api_mentor_status_requests_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentorStatusRequest'
          description: ''
    post:
      operationId: api_mentor_status_requests_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorStatusRequest'
          description: ''
  /api/mentor-status-requests/{id}/:
    get:
      operationId: api_mentor_status_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentor Status Request.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorStatusRequest'
          description: ''
    put:
      operationId: api_mentor_status_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentor Status Request.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorStatusRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorStatusRequest'
          description: ''
    patch:
      operationId: api_mentor_status_requests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentor Status Request.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMentorStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMentorStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMentorStatusRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorStatusRequest'
          description: ''
    delete:
      operationId: api_mentor_status_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentor Status Request.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/mentorship-requests/:
    get:
      operationId: api_mentorship_requests_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentorshipRequest'
          description: ''
    post:
      operationId: api_mentorship_requests_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipRequest'
          description: ''
  /api/mentorship-requests/{id}/:
    get:
      operationId: api_mentorship_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Request.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipRequest'
          description: ''
    put:
      operationId: api_mentorship_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Request.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorshipRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipRequest'
          description: ''
    patch:
      operationId: api_mentorship_requests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Request.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipRequest'
          description: ''
    delete:
      operationId: api_mentorship_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Request.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/mentorship-works/:
    get:
      operationId: api_mentorship_works_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentorshipWork'
          description: ''
    post:
      operationId: api_mentorship_works_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipWork'
          description: ''
  /api/mentorship-works/{id}/:
    get:
      operationId: api_mentorship_works_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Work.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipWork'
          description: ''
    put:
      operationId: api_mentorship_works_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Work.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MentorshipWork'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipWork'
          description: ''
    patch:
      operationId: api_mentorship_works_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Work.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipWork'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipWork'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMentorshipWork'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorshipWork'
          description: ''
    delete:
      operationId: api_mentorship_works_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mentorship Work.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/profiles/:
    get:
      operationId: api_profiles_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: api_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/{id}/:
    get:
      operationId: api_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: api_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/project-media/:
    get:
      operationId: api_project_media_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMedia'
          description: ''
    post:
      operationId: api_project_media_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMedia'
          description: ''
  /api/project-media/{id}/:
    get:
      operationId: api_project_media_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMedia'
          description: ''
    put:
      operationId: api_project_media_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectMedia'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMedia'
          description: ''
    patch:
      operationId: api_project_media_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Media.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectMedia'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMedia'
          description: ''
    delete:
      operationId: api_project_media_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Media.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/:
    get:
      operationId: api_projects_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: api_projects_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: api_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: api_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/skills/:
    get:
      operationId: api_skills_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
          description: ''
    post:
      operationId: api_skills_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/skills/{id}/:
    get:
      operationId: api_skills_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    put:
      operationId: api_skills_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    patch:
      operationId: api_skills_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    delete:
      operationId: api_skills_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/socials/:
    get:
      operationId: api_socials_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social'
          description: ''
    post:
      operationId: api_socials_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Social'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Social'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Social'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ''
  /api/socials/{id}/:
    get:
      operationId: api_socials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Social.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ''
    put:
      operationId: api_socials_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Social.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Social'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Social'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Social'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ''
    patch:
      operationId: api_socials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Social.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSocial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSocial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSocial'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ''
    delete:
      operationId: api_socials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Social.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          description: No response body
  /auth/users/:
    get:
      operationId: auth_users_list
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Certificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        organization:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        issue_date:
          type: string
          format: date
        expiration_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
      required:
      - id
      - issue_date
      - organization
      - profile
      - title
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        organization:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        certificate:
          type: string
          format: uri
        verification_status:
          $ref: '#/components/schemas/VerificationStatusEnum'
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
      required:
      - id
      - organization
      - profile
      - start_date
      - title
    Education:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        degree:
          type: string
          maxLength: 1024
        school:
          type: string
          maxLength: 1024
        field_of_study:
          type: string
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        media:
          type: string
          format: uri
        profile:
          type: integer
      required:
      - degree
      - field_of_study
      - id
      - profile
      - school
      - start_date
    Endorsement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        endorser:
          type: integer
        endorsee:
          type: integer
        skill:
          type: array
          items:
            type: integer
      required:
      - created_at
      - endorsee
      - endorser
      - id
      - updated_at
    Experience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 1024
        company:
          type: string
          maxLength: 1024
        location:
          type: string
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
      required:
      - company
      - id
      - location
      - position
      - profile
      - start_date
    ExperienceMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        experience:
          type: integer
      required:
      - experience
      - id
      - media
    FeaturedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: string
          maxLength: 1024
        level:
          $ref: '#/components/schemas/LevelEnum'
        link:
          type: string
          format: uri
          maxLength: 200
        media:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course:
          type: integer
      required:
      - course
      - created_at
      - duration
      - id
      - level
      - price
      - updated_at
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Job Title/Position
          maxLength: 1024
        company:
          type: string
          maxLength: 1024
        location:
          type: string
          maxLength: 1024
        type:
          $ref: '#/components/schemas/TypeEnum'
        salary:
          type: string
          nullable: true
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        working_hours:
          type: string
          nullable: true
          maxLength: 1024
        requirements:
          type: string
          maxLength: 500
        responsibilities:
          type: string
          maxLength: 500
        skills:
          type: array
          items:
            type: integer
      required:
      - company
      - id
      - location
      - start_date
      - title
      - type
    JobApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cover_letter:
          type: string
          nullable: true
          maxLength: 500
        status:
          $ref: '#/components/schemas/Status487Enum'
        custom_status:
          type: string
          nullable: true
          maxLength: 1024
        job:
          type: integer
        applicant:
          type: integer
      required:
      - applicant
      - id
      - job
    JobListing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/JobListingStatusEnum'
        start_date:
          type: string
          format: date
        deadline:
          type: string
          format: date
        job:
          type: integer
        employer:
          type: integer
        recruiter:
          type: integer
          nullable: true
      required:
      - deadline
      - employer
      - id
      - job
      - start_date
    JobListingStatusEnum:
      enum:
      - upcoming
      - active
      - closed
      type: string
      description: |-
        * `upcoming` - Upcoming
        * `active` - Active
        * `closed` - Closed
    JobMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        job:
          type: integer
      required:
      - id
      - job
      - media
    JobSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        job:
          type: integer
      required:
      - id
      - job
      - name
    LevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
    MentorStatusRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/Status487Enum'
        message:
          type: string
          nullable: true
          maxLength: 500
        response:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mentor:
          type: integer
      required:
      - created_at
      - id
      - mentor
      - updated_at
    MentorshipRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/Status487Enum'
        message:
          type: string
          nullable: true
          maxLength: 500
        response:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mentor:
          type: integer
        mentee:
          type: integer
      required:
      - created_at
      - id
      - mentee
      - mentor
      - updated_at
    MentorshipWork:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        mentor:
          type: integer
        mentee:
          type: integer
      required:
      - id
      - mentee
      - mentor
      - start_date
      - title
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        organization:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        issue_date:
          type: string
          format: date
        expiration_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        organization:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        certificate:
          type: string
          format: uri
        verification_status:
          $ref: '#/components/schemas/VerificationStatusEnum'
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
    PatchedEducation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        degree:
          type: string
          maxLength: 1024
        school:
          type: string
          maxLength: 1024
        field_of_study:
          type: string
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        media:
          type: string
          format: uri
        profile:
          type: integer
    PatchedEndorsement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        endorser:
          type: integer
        endorsee:
          type: integer
        skill:
          type: array
          items:
            type: integer
    PatchedExperience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 1024
        company:
          type: string
          maxLength: 1024
        location:
          type: string
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
    PatchedExperienceMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        experience:
          type: integer
    PatchedFeaturedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: string
          maxLength: 1024
        level:
          $ref: '#/components/schemas/LevelEnum'
        link:
          type: string
          format: uri
          maxLength: 200
        media:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course:
          type: integer
    PatchedJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Job Title/Position
          maxLength: 1024
        company:
          type: string
          maxLength: 1024
        location:
          type: string
          maxLength: 1024
        type:
          $ref: '#/components/schemas/TypeEnum'
        salary:
          type: string
          nullable: true
          maxLength: 1024
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        description:
          type: string
          maxLength: 500
        working_hours:
          type: string
          nullable: true
          maxLength: 1024
        requirements:
          type: string
          maxLength: 500
        responsibilities:
          type: string
          maxLength: 500
        skills:
          type: array
          items:
            type: integer
    PatchedJobApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cover_letter:
          type: string
          nullable: true
          maxLength: 500
        status:
          $ref: '#/components/schemas/Status487Enum'
        custom_status:
          type: string
          nullable: true
          maxLength: 1024
        job:
          type: integer
        applicant:
          type: integer
    PatchedJobListing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/JobListingStatusEnum'
        start_date:
          type: string
          format: date
        deadline:
          type: string
          format: date
        job:
          type: integer
        employer:
          type: integer
        recruiter:
          type: integer
          nullable: true
    PatchedJobMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        job:
          type: integer
    PatchedJobSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        job:
          type: integer
    PatchedMentorStatusRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/Status487Enum'
        message:
          type: string
          nullable: true
          maxLength: 500
        response:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mentor:
          type: integer
    PatchedMentorshipRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/Status487Enum'
        message:
          type: string
          nullable: true
          maxLength: 500
        response:
          type: string
          nullable: true
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mentor:
          type: integer
        mentee:
          type: integer
    PatchedMentorshipWork:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        mentor:
          type: integer
        mentee:
          type: integer
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        bio:
          type: string
          maxLength: 500
        location:
          type: string
          maxLength: 30
        birth_date:
          type: string
          format: date
          nullable: true
        phone:
          type: string
          maxLength: 15
        website:
          type: string
          format: uri
          maxLength: 200
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        skills:
          type: array
          items:
            type: integer
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
    PatchedProjectMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        project:
          type: integer
    PatchedSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedSocial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        url:
          type: string
          format: uri
          maxLength: 200
        profile:
          type: integer
    PatchedUser:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 1024
        email:
          type: string
          format: email
          readOnly: true
        id:
          type: integer
          readOnly: true
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        bio:
          type: string
          maxLength: 500
        location:
          type: string
          maxLength: 30
        birth_date:
          type: string
          format: date
          nullable: true
        phone:
          type: string
          maxLength: 15
        website:
          type: string
          format: uri
          maxLength: 200
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        skills:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
      - user
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 1024
        description:
          type: string
          maxLength: 500
        link:
          type: string
          format: uri
          maxLength: 200
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        media:
          type: string
          format: uri
        profile:
          type: integer
        skills:
          type: array
          items:
            type: integer
      required:
      - id
      - profile
      - start_date
      - title
    ProjectMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        media:
          type: string
          format: uri
        project:
          type: integer
      required:
      - id
      - media
      - project
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
      required:
      - current_password
    Skill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - name
    Social:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 1024
        url:
          type: string
          format: uri
          maxLength: 200
        profile:
          type: integer
      required:
      - id
      - name
      - profile
      - url
    Status487Enum:
      enum:
      - pending
      - accepted
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `rejected` - Rejected
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    TypeEnum:
      enum:
      - internship
      - part_time
      - full_time
      - contract
      - temporary
      - volunteer
      - remote
      type: string
      description: |-
        * `internship` - Internship
        * `part_time` - Part Time
        * `full_time` - Full Time
        * `contract` - Contract
        * `temporary` - Temporary
        * `volunteer` - Volunteer
        * `remote` - Remote
    User:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 1024
        email:
          type: string
          format: email
          readOnly: true
        id:
          type: integer
          readOnly: true
      required:
      - email
      - full_name
      - id
    UserCreate:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 1024
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - full_name
      - id
      - password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
    VerificationStatusEnum:
      enum:
      - pending
      - verified
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `verified` - Verified
        * `rejected` - Rejected
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
